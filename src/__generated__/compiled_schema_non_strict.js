"use strict";exports["https://schema.openattestation.com/2.0/schema.json"] = validate10;const schema11 = {"title":"Open Attestation Schema 2.0","$id":"https://schema.openattestation.com/2.0/schema.json","$schema":"http://json-schema.org/draft-07/schema#","definitions":{"identityProofDns":{"type":"object","properties":{"type":{"type":"string"},"location":{"type":"string","description":"Url of the website referencing to document store"}},"required":["type","location"]},"identityProofDid":{"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","description":"Public key associated"}},"required":["type","key"]},"identityProofDnsDid":{"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","description":"Public key associated"},"location":{"type":"string","description":"Url of the website referencing to document store"}},"required":["type","key","location"]},"identityProof":{"type":"object","anyOf":[{"$ref":"#/definitions/identityProofDns"},{"$ref":"#/definitions/identityProofDnsDid"},{"$ref":"#/definitions/identityProofDid"}]},"issuer":{"type":"object","properties":{"id":{"type":"string","description":"Issuer's id, DID can be used"},"name":{"type":"string","description":"Issuer's name"},"revocation":{"type":"object","properties":{"type":{"type":"string"},"location":{"type":"string","description":"Smart contract address or url of certificate revocation list for Revocation Store type revocation"}}},"identityProof":{"$ref":"#/definitions/identityProof"}},"required":["name","identityProof"],"additionalProperties":true},"documentStore":{"allOf":[{"$ref":"#/definitions/issuer"},{"type":"object","properties":{"documentStore":{"type":"string","description":"Smart contract address of document store"}},"required":["documentStore"]}]},"certificateStore":{"type":"object","properties":{"name":{"type":"string","description":"Issuer's name"},"certificateStore":{"type":"string","deprecationMessage":"Use documentStore and identityProof instead of this","description":"Smart contract address of certificate store. Same as documentStore"}},"required":["name","certificateStore"],"additionalProperties":true},"tokenRegistry":{"allOf":[{"$ref":"#/definitions/issuer"},{"type":"object","properties":{"tokenRegistry":{"type":"string","description":"Smart contract address of token registry"}},"required":["tokenRegistry"]}]}},"type":"object","properties":{"id":{"type":"string","description":"Internal reference, usually serial number, of this document"},"$template":{"oneOf":[{"type":"string"},{"type":"object","properties":{"name":{"type":"string","description":"Template name to be use by template renderer to determine the template to use"},"type":{"type":"string","description":"Type of renderer template"},"url":{"type":"string","description":"URL of a decentralised renderer to render this document"}},"required":["name","type"]}]},"documentUrl":{"type":"string","description":"URL of the stored document"},"issuers":{"type":"array","items":{"type":"object","title":"issuer","oneOf":[{"$ref":"#/definitions/tokenRegistry"},{"$ref":"#/definitions/documentStore"},{"$ref":"#/definitions/certificateStore"},{"allOf":[{"$ref":"#/definitions/issuer"},{"not":{"anyOf":[{"required":["certificateStore"]},{"required":["tokenRegistry"]},{"required":["documentStore"]}]}}]}]},"minItems":1},"recipient":{"type":"object","properties":{"name":{"type":"string","description":"Recipient's name"}},"additionalProperties":true},"network":{"type":"object","properties":{"chain":{"type":"string","description":"Which blockchain being used"},"chainId":{"type":"string","description":"Chain ID of the network used"}},"required":["chain"],"additionalProperties":true},"attachments":{"type":"array","items":{"type":"object","properties":{"filename":{"type":"string","description":"Name of attachment, with appropriate extensions"},"type":{"type":"string","description":"Type of attachment"},"data":{"type":"string","description":"Base64 encoding of attachment"}},"required":["filename","type","data"],"additionalProperties":false}}},"required":["issuers"],"additionalProperties":true};const schema19 = {"type":"object","properties":{"name":{"type":"string","description":"Issuer's name"},"certificateStore":{"type":"string","deprecationMessage":"Use documentStore and identityProof instead of this","description":"Smart contract address of certificate store. Same as documentStore"}},"required":["name","certificateStore"],"additionalProperties":true};const schema12 = {"allOf":[{"$ref":"#/definitions/issuer"},{"type":"object","properties":{"tokenRegistry":{"type":"string","description":"Smart contract address of token registry"}},"required":["tokenRegistry"]}]};const schema13 = {"type":"object","properties":{"id":{"type":"string","description":"Issuer's id, DID can be used"},"name":{"type":"string","description":"Issuer's name"},"revocation":{"type":"object","properties":{"type":{"type":"string"},"location":{"type":"string","description":"Smart contract address or url of certificate revocation list for Revocation Store type revocation"}}},"identityProof":{"$ref":"#/definitions/identityProof"}},"required":["name","identityProof"],"additionalProperties":true};const schema14 = {"type":"object","anyOf":[{"$ref":"#/definitions/identityProofDns"},{"$ref":"#/definitions/identityProofDnsDid"},{"$ref":"#/definitions/identityProofDid"}]};const schema15 = {"type":"object","properties":{"type":{"type":"string"},"location":{"type":"string","description":"Url of the website referencing to document store"}},"required":["type","location"]};const schema16 = {"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","description":"Public key associated"},"location":{"type":"string","description":"Url of the website referencing to document store"}},"required":["type","key","location"]};const schema17 = {"type":"object","properties":{"type":{"type":"string"},"key":{"type":"string","description":"Public key associated"}},"required":["type","key"]};function validate13(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(!(data && typeof data == "object" && !Array.isArray(data))){const err0 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}const _errs1 = errors;let valid0 = false;const _errs2 = errors;if(data && typeof data == "object" && !Array.isArray(data)){if(data.type === undefined){const err1 = {instancePath,schemaPath:"#/definitions/identityProofDns/required",keyword:"required",params:{missingProperty: "type"},message:"must have required property '"+"type"+"'"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}if(data.location === undefined){const err2 = {instancePath,schemaPath:"#/definitions/identityProofDns/required",keyword:"required",params:{missingProperty: "location"},message:"must have required property '"+"location"+"'"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}if(data.type !== undefined){if(typeof data.type !== "string"){const err3 = {instancePath:instancePath+"/type",schemaPath:"#/definitions/identityProofDns/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}}if(data.location !== undefined){if(typeof data.location !== "string"){const err4 = {instancePath:instancePath+"/location",schemaPath:"#/definitions/identityProofDns/properties/location/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}}}else {const err5 = {instancePath,schemaPath:"#/definitions/identityProofDns/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}var _valid0 = _errs2 === errors;valid0 = valid0 || _valid0;if(!valid0){const _errs9 = errors;if(data && typeof data == "object" && !Array.isArray(data)){if(data.type === undefined){const err6 = {instancePath,schemaPath:"#/definitions/identityProofDnsDid/required",keyword:"required",params:{missingProperty: "type"},message:"must have required property '"+"type"+"'"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}if(data.key === undefined){const err7 = {instancePath,schemaPath:"#/definitions/identityProofDnsDid/required",keyword:"required",params:{missingProperty: "key"},message:"must have required property '"+"key"+"'"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}if(data.location === undefined){const err8 = {instancePath,schemaPath:"#/definitions/identityProofDnsDid/required",keyword:"required",params:{missingProperty: "location"},message:"must have required property '"+"location"+"'"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}if(data.type !== undefined){if(typeof data.type !== "string"){const err9 = {instancePath:instancePath+"/type",schemaPath:"#/definitions/identityProofDnsDid/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}}if(data.key !== undefined){if(typeof data.key !== "string"){const err10 = {instancePath:instancePath+"/key",schemaPath:"#/definitions/identityProofDnsDid/properties/key/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}}if(data.location !== undefined){if(typeof data.location !== "string"){const err11 = {instancePath:instancePath+"/location",schemaPath:"#/definitions/identityProofDnsDid/properties/location/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}}}else {const err12 = {instancePath,schemaPath:"#/definitions/identityProofDnsDid/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}var _valid0 = _errs9 === errors;valid0 = valid0 || _valid0;if(!valid0){const _errs18 = errors;if(data && typeof data == "object" && !Array.isArray(data)){if(data.type === undefined){const err13 = {instancePath,schemaPath:"#/definitions/identityProofDid/required",keyword:"required",params:{missingProperty: "type"},message:"must have required property '"+"type"+"'"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}if(data.key === undefined){const err14 = {instancePath,schemaPath:"#/definitions/identityProofDid/required",keyword:"required",params:{missingProperty: "key"},message:"must have required property '"+"key"+"'"};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}if(data.type !== undefined){if(typeof data.type !== "string"){const err15 = {instancePath:instancePath+"/type",schemaPath:"#/definitions/identityProofDid/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}}if(data.key !== undefined){if(typeof data.key !== "string"){const err16 = {instancePath:instancePath+"/key",schemaPath:"#/definitions/identityProofDid/properties/key/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}}}else {const err17 = {instancePath,schemaPath:"#/definitions/identityProofDid/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}var _valid0 = _errs18 === errors;valid0 = valid0 || _valid0;}}if(!valid0){const err18 = {instancePath,schemaPath:"#/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}else {errors = _errs1;if(vErrors !== null){if(_errs1){vErrors.length = _errs1;}else {vErrors = null;}}}validate13.errors = vErrors;return errors === 0;}function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(data && typeof data == "object" && !Array.isArray(data)){if(data.name === undefined){const err0 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "name"},message:"must have required property '"+"name"+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}if(data.identityProof === undefined){const err1 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "identityProof"},message:"must have required property '"+"identityProof"+"'"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}if(data.id !== undefined){if(typeof data.id !== "string"){const err2 = {instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}}if(data.name !== undefined){if(typeof data.name !== "string"){const err3 = {instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}}if(data.revocation !== undefined){let data2 = data.revocation;if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.type !== undefined){if(typeof data2.type !== "string"){const err4 = {instancePath:instancePath+"/revocation/type",schemaPath:"#/properties/revocation/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}}if(data2.location !== undefined){if(typeof data2.location !== "string"){const err5 = {instancePath:instancePath+"/revocation/location",schemaPath:"#/properties/revocation/properties/location/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}}}else {const err6 = {instancePath:instancePath+"/revocation",schemaPath:"#/properties/revocation/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}}if(data.identityProof !== undefined){if(!(validate13(data.identityProof, {instancePath:instancePath+"/identityProof",parentData:data,parentDataProperty:"identityProof",rootData}))){vErrors = vErrors === null ? validate13.errors : vErrors.concat(validate13.errors);errors = vErrors.length;}}}else {const err7 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}validate12.errors = vErrors;return errors === 0;}function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(!(validate12(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}if(data && typeof data == "object" && !Array.isArray(data)){if(data.tokenRegistry === undefined){const err0 = {instancePath,schemaPath:"#/allOf/1/required",keyword:"required",params:{missingProperty: "tokenRegistry"},message:"must have required property '"+"tokenRegistry"+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}if(data.tokenRegistry !== undefined){if(typeof data.tokenRegistry !== "string"){const err1 = {instancePath:instancePath+"/tokenRegistry",schemaPath:"#/allOf/1/properties/tokenRegistry/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}}else {const err2 = {instancePath,schemaPath:"#/allOf/1/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}validate11.errors = vErrors;return errors === 0;}const schema18 = {"allOf":[{"$ref":"#/definitions/issuer"},{"type":"object","properties":{"documentStore":{"type":"string","description":"Smart contract address of document store"}},"required":["documentStore"]}]};function validate17(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(!(validate12(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}if(data && typeof data == "object" && !Array.isArray(data)){if(data.documentStore === undefined){const err0 = {instancePath,schemaPath:"#/allOf/1/required",keyword:"required",params:{missingProperty: "documentStore"},message:"must have required property '"+"documentStore"+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}if(data.documentStore !== undefined){if(typeof data.documentStore !== "string"){const err1 = {instancePath:instancePath+"/documentStore",schemaPath:"#/allOf/1/properties/documentStore/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}}else {const err2 = {instancePath,schemaPath:"#/allOf/1/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}validate17.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="https://schema.openattestation.com/2.0/schema.json" */;let vErrors = null;let errors = 0;if(data && typeof data == "object" && !Array.isArray(data)){if(data.issuers === undefined){const err0 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "issuers"},message:"must have required property '"+"issuers"+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}if(data.id !== undefined){if(typeof data.id !== "string"){const err1 = {instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}if(data.$template !== undefined){let data1 = data.$template;const _errs5 = errors;let valid1 = false;let passing0 = null;const _errs6 = errors;if(typeof data1 !== "string"){const err2 = {instancePath:instancePath+"/$template",schemaPath:"#/properties/%24template/oneOf/0/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}var _valid0 = _errs6 === errors;if(_valid0){valid1 = true;passing0 = 0;}const _errs8 = errors;if(data1 && typeof data1 == "object" && !Array.isArray(data1)){if(data1.name === undefined){const err3 = {instancePath:instancePath+"/$template",schemaPath:"#/properties/%24template/oneOf/1/required",keyword:"required",params:{missingProperty: "name"},message:"must have required property '"+"name"+"'"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}if(data1.type === undefined){const err4 = {instancePath:instancePath+"/$template",schemaPath:"#/properties/%24template/oneOf/1/required",keyword:"required",params:{missingProperty: "type"},message:"must have required property '"+"type"+"'"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}if(data1.name !== undefined){if(typeof data1.name !== "string"){const err5 = {instancePath:instancePath+"/$template/name",schemaPath:"#/properties/%24template/oneOf/1/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}}if(data1.type !== undefined){if(typeof data1.type !== "string"){const err6 = {instancePath:instancePath+"/$template/type",schemaPath:"#/properties/%24template/oneOf/1/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}}if(data1.url !== undefined){if(typeof data1.url !== "string"){const err7 = {instancePath:instancePath+"/$template/url",schemaPath:"#/properties/%24template/oneOf/1/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}}}else {const err8 = {instancePath:instancePath+"/$template",schemaPath:"#/properties/%24template/oneOf/1/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}var _valid0 = _errs8 === errors;if(_valid0 && valid1){valid1 = false;passing0 = [passing0, 1];}else {if(_valid0){valid1 = true;passing0 = 1;}}if(!valid1){const err9 = {instancePath:instancePath+"/$template",schemaPath:"#/properties/%24template/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}else {errors = _errs5;if(vErrors !== null){if(_errs5){vErrors.length = _errs5;}else {vErrors = null;}}}}if(data.documentUrl !== undefined){if(typeof data.documentUrl !== "string"){const err10 = {instancePath:instancePath+"/documentUrl",schemaPath:"#/properties/documentUrl/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}}if(data.issuers !== undefined){let data6 = data.issuers;if(Array.isArray(data6)){if(data6.length < 1){const err11 = {instancePath:instancePath+"/issuers",schemaPath:"#/properties/issuers/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}const len0 = data6.length;for(let i0=0; i0<len0; i0++){let data7 = data6[i0];if(!(data7 && typeof data7 == "object" && !Array.isArray(data7))){const err12 = {instancePath:instancePath+"/issuers/" + i0,schemaPath:"#/properties/issuers/items/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}const _errs22 = errors;let valid5 = false;let passing1 = null;const _errs23 = errors;if(!(validate11(data7, {instancePath:instancePath+"/issuers/" + i0,parentData:data6,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var _valid1 = _errs23 === errors;if(_valid1){valid5 = true;passing1 = 0;}const _errs24 = errors;if(!(validate17(data7, {instancePath:instancePath+"/issuers/" + i0,parentData:data6,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate17.errors : vErrors.concat(validate17.errors);errors = vErrors.length;}var _valid1 = _errs24 === errors;if(_valid1 && valid5){valid5 = false;passing1 = [passing1, 1];}else {if(_valid1){valid5 = true;passing1 = 1;}const _errs25 = errors;if(data7 && typeof data7 == "object" && !Array.isArray(data7)){if(data7.name === undefined){const err13 = {instancePath:instancePath+"/issuers/" + i0,schemaPath:"#/definitions/certificateStore/required",keyword:"required",params:{missingProperty: "name"},message:"must have required property '"+"name"+"'"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}if(data7.certificateStore === undefined){const err14 = {instancePath:instancePath+"/issuers/" + i0,schemaPath:"#/definitions/certificateStore/required",keyword:"required",params:{missingProperty: "certificateStore"},message:"must have required property '"+"certificateStore"+"'"};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}if(data7.name !== undefined){if(typeof data7.name !== "string"){const err15 = {instancePath:instancePath+"/issuers/" + i0+"/name",schemaPath:"#/definitions/certificateStore/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}}if(data7.certificateStore !== undefined){if(typeof data7.certificateStore !== "string"){const err16 = {instancePath:instancePath+"/issuers/" + i0+"/certificateStore",schemaPath:"#/definitions/certificateStore/properties/certificateStore/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}}}else {const err17 = {instancePath:instancePath+"/issuers/" + i0,schemaPath:"#/definitions/certificateStore/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}var _valid1 = _errs25 === errors;if(_valid1 && valid5){valid5 = false;passing1 = [passing1, 2];}else {if(_valid1){valid5 = true;passing1 = 2;}const _errs33 = errors;if(!(validate12(data7, {instancePath:instancePath+"/issuers/" + i0,parentData:data6,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}const _errs36 = errors;const _errs37 = errors;const _errs38 = errors;let valid10 = false;const _errs39 = errors;if(data7 && typeof data7 == "object" && !Array.isArray(data7)){let missing0;if((data7.certificateStore === undefined) && (missing0 = "certificateStore")){const err18 = {};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}}var _valid2 = _errs39 === errors;valid10 = valid10 || _valid2;if(!valid10){const _errs40 = errors;if(data7 && typeof data7 == "object" && !Array.isArray(data7)){let missing1;if((data7.tokenRegistry === undefined) && (missing1 = "tokenRegistry")){const err19 = {};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}}var _valid2 = _errs40 === errors;valid10 = valid10 || _valid2;if(!valid10){const _errs41 = errors;if(data7 && typeof data7 == "object" && !Array.isArray(data7)){let missing2;if((data7.documentStore === undefined) && (missing2 = "documentStore")){const err20 = {};if(vErrors === null){vErrors = [err20];}else {vErrors.push(err20);}errors++;}}var _valid2 = _errs41 === errors;valid10 = valid10 || _valid2;}}if(!valid10){const err21 = {};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}else {errors = _errs38;if(vErrors !== null){if(_errs38){vErrors.length = _errs38;}else {vErrors = null;}}}var valid9 = _errs37 === errors;if(valid9){const err22 = {instancePath:instancePath+"/issuers/" + i0,schemaPath:"#/properties/issuers/items/oneOf/3/allOf/1/not",keyword:"not",params:{},message:"must NOT be valid"};if(vErrors === null){vErrors = [err22];}else {vErrors.push(err22);}errors++;}else {errors = _errs36;if(vErrors !== null){if(_errs36){vErrors.length = _errs36;}else {vErrors = null;}}}var _valid1 = _errs33 === errors;if(_valid1 && valid5){valid5 = false;passing1 = [passing1, 3];}else {if(_valid1){valid5 = true;passing1 = 3;}}}}if(!valid5){const err23 = {instancePath:instancePath+"/issuers/" + i0,schemaPath:"#/properties/issuers/items/oneOf",keyword:"oneOf",params:{passingSchemas: passing1},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}else {errors = _errs22;if(vErrors !== null){if(_errs22){vErrors.length = _errs22;}else {vErrors = null;}}}}}else {const err24 = {instancePath:instancePath+"/issuers",schemaPath:"#/properties/issuers/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err24];}else {vErrors.push(err24);}errors++;}}if(data.recipient !== undefined){let data10 = data.recipient;if(data10 && typeof data10 == "object" && !Array.isArray(data10)){if(data10.name !== undefined){if(typeof data10.name !== "string"){const err25 = {instancePath:instancePath+"/recipient/name",schemaPath:"#/properties/recipient/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}}}else {const err26 = {instancePath:instancePath+"/recipient",schemaPath:"#/properties/recipient/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}}if(data.network !== undefined){let data12 = data.network;if(data12 && typeof data12 == "object" && !Array.isArray(data12)){if(data12.chain === undefined){const err27 = {instancePath:instancePath+"/network",schemaPath:"#/properties/network/required",keyword:"required",params:{missingProperty: "chain"},message:"must have required property '"+"chain"+"'"};if(vErrors === null){vErrors = [err27];}else {vErrors.push(err27);}errors++;}if(data12.chain !== undefined){if(typeof data12.chain !== "string"){const err28 = {instancePath:instancePath+"/network/chain",schemaPath:"#/properties/network/properties/chain/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err28];}else {vErrors.push(err28);}errors++;}}if(data12.chainId !== undefined){if(typeof data12.chainId !== "string"){const err29 = {instancePath:instancePath+"/network/chainId",schemaPath:"#/properties/network/properties/chainId/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err29];}else {vErrors.push(err29);}errors++;}}}else {const err30 = {instancePath:instancePath+"/network",schemaPath:"#/properties/network/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err30];}else {vErrors.push(err30);}errors++;}}if(data.attachments !== undefined){let data15 = data.attachments;if(Array.isArray(data15)){const len1 = data15.length;for(let i1=0; i1<len1; i1++){let data16 = data15[i1];if(data16 && typeof data16 == "object" && !Array.isArray(data16)){if(data16.filename === undefined){const err31 = {instancePath:instancePath+"/attachments/" + i1,schemaPath:"#/properties/attachments/items/required",keyword:"required",params:{missingProperty: "filename"},message:"must have required property '"+"filename"+"'"};if(vErrors === null){vErrors = [err31];}else {vErrors.push(err31);}errors++;}if(data16.type === undefined){const err32 = {instancePath:instancePath+"/attachments/" + i1,schemaPath:"#/properties/attachments/items/required",keyword:"required",params:{missingProperty: "type"},message:"must have required property '"+"type"+"'"};if(vErrors === null){vErrors = [err32];}else {vErrors.push(err32);}errors++;}if(data16.data === undefined){const err33 = {instancePath:instancePath+"/attachments/" + i1,schemaPath:"#/properties/attachments/items/required",keyword:"required",params:{missingProperty: "data"},message:"must have required property '"+"data"+"'"};if(vErrors === null){vErrors = [err33];}else {vErrors.push(err33);}errors++;}for(const key0 in data16){if(!(((key0 === "filename") || (key0 === "type")) || (key0 === "data"))){const err34 = {instancePath:instancePath+"/attachments/" + i1,schemaPath:"#/properties/attachments/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err34];}else {vErrors.push(err34);}errors++;}}if(data16.filename !== undefined){if(typeof data16.filename !== "string"){const err35 = {instancePath:instancePath+"/attachments/" + i1+"/filename",schemaPath:"#/properties/attachments/items/properties/filename/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err35];}else {vErrors.push(err35);}errors++;}}if(data16.type !== undefined){if(typeof data16.type !== "string"){const err36 = {instancePath:instancePath+"/attachments/" + i1+"/type",schemaPath:"#/properties/attachments/items/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err36];}else {vErrors.push(err36);}errors++;}}if(data16.data !== undefined){if(typeof data16.data !== "string"){const err37 = {instancePath:instancePath+"/attachments/" + i1+"/data",schemaPath:"#/properties/attachments/items/properties/data/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err37];}else {vErrors.push(err37);}errors++;}}}else {const err38 = {instancePath:instancePath+"/attachments/" + i1,schemaPath:"#/properties/attachments/items/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err38];}else {vErrors.push(err38);}errors++;}}}else {const err39 = {instancePath:instancePath+"/attachments",schemaPath:"#/properties/attachments/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err39];}else {vErrors.push(err39);}errors++;}}}else {const err40 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err40];}else {vErrors.push(err40);}errors++;}validate10.errors = vErrors;return errors === 0;}exports["https://schema.openattestation.com/3.0/schema.json"] = validate21;const schema20 = {"title":"Open Attestation Schema 3.0","$id":"https://schema.openattestation.com/3.0/schema.json","$schema":"http://json-schema.org/draft-07/schema#","type":"object","definitions":{"type":{"oneOf":[{"type":"array","items":{"type":"string"}},{"type":"string"}]},"issuer":{"type":"object","properties":{"id":{"type":"string","format":"uri","description":"URI when dereferenced, results in a document containing machine-readable information about the issuer that can be used to verify the information expressed in the credential. More information in https://www.w3.org/TR/vc-data-model/#issuer"},"name":{"type":"string","description":"Issuer's name"}},"required":["id","name"],"additionalProperties":true}},"properties":{"@context":{"type":"array","items":{"type":["string","object"],"format":"uri"},"description":"List of URI to determine the terminology used in the verifiable credential as explained by https://www.w3.org/TR/vc-data-model/#contexts"},"id":{"type":"string","format":"uri","description":"URI to the subject of the credential as explained by https://www.w3.org/TR/vc-data-model/#credential-subject"},"type":{"$ref":"#/definitions/type","description":"Specific verifiable credential type as explained by https://www.w3.org/TR/vc-data-model/#types"},"reference":{"type":"string","description":"Internal reference, usually a serial number, of this document"},"name":{"type":"string","description":"Human readable name of this credential"},"issuanceDate":{"type":"string","format":"date-time","description":"The date and time when this credential becomes valid (may be deprecated in favor of issued/validFrom a future version of W3C's VC Data Model)"},"expirationDate":{"type":"string","format":"date-time","description":"The date and time when this credential expires"},"issued":{"type":"string","format":"date-time","description":"The date and time when this credential becomes valid"},"validFrom":{"type":"string","format":"date-time","description":"The date and time when this credential becomes valid"},"validUntil":{"type":"string","format":"date-time","description":"The date and time when this credential expires"},"credentialSubject":{"oneOf":[{"type":"object"},{"type":"array","items":{"type":"object"}}]},"credentialStatus":{"type":"object","properties":{"id":{"type":"string","format":"uri","examples":["https://example.edu/status/24"]},"type":{"type":"string","examples":["CredentialStatusList2017"],"description":"Express the credential status type (also referred to as the credential status method). It is expected that the value will provide enough information to determine the current status of the credential. For example, the object could contain a link to an external document noting whether or not the credential is suspended or revoked."}},"required":["id","type"]},"issuer":{"oneOf":[{"$ref":"#/definitions/issuer"},{"type":"string"}]},"openAttestationMetadata":{"type":"object","properties":{"template":{"type":"object","properties":{"name":{"type":"string","description":"Template name to be use by template renderer to determine the template to use"},"type":{"type":"string","description":"Type of renderer template"},"url":{"type":"string","description":"URL of a decentralised renderer to render this document"}},"required":["name","type","url"],"additionalProperties":false},"proof":{"type":"object","properties":{"type":{"type":"string","description":"Proof method name as explained by https://www.w3.org/TR/vc-data-model/#types"},"method":{"type":"string","description":"Proof Open Attestation method"},"value":{"description":"Proof value of issuer(s). Smart contract address for TOKEN_REGISTRY & DOCUMENT_STORE, did for DID method","type":"string"},"revocation":{"type":"object","properties":{"type":{"type":"string","description":"Revocation method (if required by proof method)"},"location":{"type":"string","description":"Smart contract address or url of certificate revocation list for Revocation Store type revocation"}},"required":["type"]}},"required":["type","method","value"],"additionalProperties":true},"identityProof":{"type":"object","properties":{"type":{"type":"string"},"identifier":{"type":"string","description":"Identifier to be shown to end user upon verifying the identity"}},"additionalProperties":false,"required":["type","identifier"]}},"required":["proof","identityProof"]},"attachments":{"type":"array","items":{"type":"object","properties":{"fileName":{"type":"string","description":"Name of this attachment, with appropriate extensions"},"mimeType":{"type":"string","description":"Media type (or MIME type) of this attachment"},"data":{"type":"string","description":"Base64 encoding of this attachment"}},"required":["fileName","mimeType","data"],"additionalProperties":false}},"network":{"type":"object","properties":{"chain":{"type":"string","description":"Which blockchain being used"},"chainId":{"type":"string","description":"Chain ID of the network used"}},"required":["chain"],"additionalProperties":true}},"required":["@context","type","credentialSubject","issuer","issuanceDate","openAttestationMetadata"],"additionalProperties":true};const schema21 = {"oneOf":[{"type":"array","items":{"type":"string"}},{"type":"string"}]};const schema22 = {"type":"object","properties":{"id":{"type":"string","format":"uri","description":"URI when dereferenced, results in a document containing machine-readable information about the issuer that can be used to verify the information expressed in the credential. More information in https://www.w3.org/TR/vc-data-model/#issuer"},"name":{"type":"string","description":"Issuer's name"}},"required":["id","name"],"additionalProperties":true};function validate21(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="https://schema.openattestation.com/3.0/schema.json" */;let vErrors = null;let errors = 0;if(data && typeof data == "object" && !Array.isArray(data)){if(data["@context"] === undefined){const err0 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "@context"},message:"must have required property '"+"@context"+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}if(data.type === undefined){const err1 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "type"},message:"must have required property '"+"type"+"'"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}if(data.credentialSubject === undefined){const err2 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "credentialSubject"},message:"must have required property '"+"credentialSubject"+"'"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}if(data.issuer === undefined){const err3 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "issuer"},message:"must have required property '"+"issuer"+"'"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}if(data.issuanceDate === undefined){const err4 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "issuanceDate"},message:"must have required property '"+"issuanceDate"+"'"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}if(data.openAttestationMetadata === undefined){const err5 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "openAttestationMetadata"},message:"must have required property '"+"openAttestationMetadata"+"'"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}if(data["@context"] !== undefined){let data0 = data["@context"];if(Array.isArray(data0)){const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];if((typeof data1 !== "string") && (!(data1 && typeof data1 == "object" && !Array.isArray(data1)))){const err6 = {instancePath:instancePath+"/@context/" + i0,schemaPath:"#/properties/%40context/items/type",keyword:"type",params:{type: schema20.properties["@context"].items.type},message:"must be string,object"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}}}else {const err7 = {instancePath:instancePath+"/@context",schemaPath:"#/properties/%40context/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}}if(data.id !== undefined){if(!(typeof data.id === "string")){const err8 = {instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}}if(data.type !== undefined){let data3 = data.type;const _errs10 = errors;let valid4 = false;let passing0 = null;const _errs11 = errors;if(Array.isArray(data3)){const len1 = data3.length;for(let i1=0; i1<len1; i1++){if(typeof data3[i1] !== "string"){const err9 = {instancePath:instancePath+"/type/" + i1,schemaPath:"#/definitions/type/oneOf/0/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}}}else {const err10 = {instancePath:instancePath+"/type",schemaPath:"#/definitions/type/oneOf/0/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}var _valid0 = _errs11 === errors;if(_valid0){valid4 = true;passing0 = 0;}const _errs15 = errors;if(typeof data3 !== "string"){const err11 = {instancePath:instancePath+"/type",schemaPath:"#/definitions/type/oneOf/1/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}var _valid0 = _errs15 === errors;if(_valid0 && valid4){valid4 = false;passing0 = [passing0, 1];}else {if(_valid0){valid4 = true;passing0 = 1;}}if(!valid4){const err12 = {instancePath:instancePath+"/type",schemaPath:"#/definitions/type/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}else {errors = _errs10;if(vErrors !== null){if(_errs10){vErrors.length = _errs10;}else {vErrors = null;}}}}if(data.reference !== undefined){if(typeof data.reference !== "string"){const err13 = {instancePath:instancePath+"/reference",schemaPath:"#/properties/reference/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}}if(data.name !== undefined){if(typeof data.name !== "string"){const err14 = {instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}}if(data.issuanceDate !== undefined){if(!(typeof data.issuanceDate === "string")){const err15 = {instancePath:instancePath+"/issuanceDate",schemaPath:"#/properties/issuanceDate/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}}if(data.expirationDate !== undefined){if(!(typeof data.expirationDate === "string")){const err16 = {instancePath:instancePath+"/expirationDate",schemaPath:"#/properties/expirationDate/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}}if(data.issued !== undefined){if(!(typeof data.issued === "string")){const err17 = {instancePath:instancePath+"/issued",schemaPath:"#/properties/issued/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}}if(data.validFrom !== undefined){if(!(typeof data.validFrom === "string")){const err18 = {instancePath:instancePath+"/validFrom",schemaPath:"#/properties/validFrom/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}}if(data.validUntil !== undefined){if(!(typeof data.validUntil === "string")){const err19 = {instancePath:instancePath+"/validUntil",schemaPath:"#/properties/validUntil/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}}if(data.credentialSubject !== undefined){let data12 = data.credentialSubject;const _errs32 = errors;let valid7 = false;let passing1 = null;const _errs33 = errors;if(!(data12 && typeof data12 == "object" && !Array.isArray(data12))){const err20 = {instancePath:instancePath+"/credentialSubject",schemaPath:"#/properties/credentialSubject/oneOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err20];}else {vErrors.push(err20);}errors++;}var _valid1 = _errs33 === errors;if(_valid1){valid7 = true;passing1 = 0;}const _errs35 = errors;if(Array.isArray(data12)){const len2 = data12.length;for(let i2=0; i2<len2; i2++){let data13 = data12[i2];if(!(data13 && typeof data13 == "object" && !Array.isArray(data13))){const err21 = {instancePath:instancePath+"/credentialSubject/" + i2,schemaPath:"#/properties/credentialSubject/oneOf/1/items/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}}}else {const err22 = {instancePath:instancePath+"/credentialSubject",schemaPath:"#/properties/credentialSubject/oneOf/1/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err22];}else {vErrors.push(err22);}errors++;}var _valid1 = _errs35 === errors;if(_valid1 && valid7){valid7 = false;passing1 = [passing1, 1];}else {if(_valid1){valid7 = true;passing1 = 1;}}if(!valid7){const err23 = {instancePath:instancePath+"/credentialSubject",schemaPath:"#/properties/credentialSubject/oneOf",keyword:"oneOf",params:{passingSchemas: passing1},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}else {errors = _errs32;if(vErrors !== null){if(_errs32){vErrors.length = _errs32;}else {vErrors = null;}}}}if(data.credentialStatus !== undefined){let data14 = data.credentialStatus;if(data14 && typeof data14 == "object" && !Array.isArray(data14)){if(data14.id === undefined){const err24 = {instancePath:instancePath+"/credentialStatus",schemaPath:"#/properties/credentialStatus/required",keyword:"required",params:{missingProperty: "id"},message:"must have required property '"+"id"+"'"};if(vErrors === null){vErrors = [err24];}else {vErrors.push(err24);}errors++;}if(data14.type === undefined){const err25 = {instancePath:instancePath+"/credentialStatus",schemaPath:"#/properties/credentialStatus/required",keyword:"required",params:{missingProperty: "type"},message:"must have required property '"+"type"+"'"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}if(data14.id !== undefined){if(!(typeof data14.id === "string")){const err26 = {instancePath:instancePath+"/credentialStatus/id",schemaPath:"#/properties/credentialStatus/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}}if(data14.type !== undefined){if(typeof data14.type !== "string"){const err27 = {instancePath:instancePath+"/credentialStatus/type",schemaPath:"#/properties/credentialStatus/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err27];}else {vErrors.push(err27);}errors++;}}}else {const err28 = {instancePath:instancePath+"/credentialStatus",schemaPath:"#/properties/credentialStatus/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err28];}else {vErrors.push(err28);}errors++;}}if(data.issuer !== undefined){let data17 = data.issuer;const _errs46 = errors;let valid11 = false;let passing2 = null;const _errs47 = errors;if(data17 && typeof data17 == "object" && !Array.isArray(data17)){if(data17.id === undefined){const err29 = {instancePath:instancePath+"/issuer",schemaPath:"#/definitions/issuer/required",keyword:"required",params:{missingProperty: "id"},message:"must have required property '"+"id"+"'"};if(vErrors === null){vErrors = [err29];}else {vErrors.push(err29);}errors++;}if(data17.name === undefined){const err30 = {instancePath:instancePath+"/issuer",schemaPath:"#/definitions/issuer/required",keyword:"required",params:{missingProperty: "name"},message:"must have required property '"+"name"+"'"};if(vErrors === null){vErrors = [err30];}else {vErrors.push(err30);}errors++;}if(data17.id !== undefined){if(!(typeof data17.id === "string")){const err31 = {instancePath:instancePath+"/issuer/id",schemaPath:"#/definitions/issuer/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err31];}else {vErrors.push(err31);}errors++;}}if(data17.name !== undefined){if(typeof data17.name !== "string"){const err32 = {instancePath:instancePath+"/issuer/name",schemaPath:"#/definitions/issuer/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err32];}else {vErrors.push(err32);}errors++;}}}else {const err33 = {instancePath:instancePath+"/issuer",schemaPath:"#/definitions/issuer/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err33];}else {vErrors.push(err33);}errors++;}var _valid2 = _errs47 === errors;if(_valid2){valid11 = true;passing2 = 0;}const _errs55 = errors;if(typeof data17 !== "string"){const err34 = {instancePath:instancePath+"/issuer",schemaPath:"#/properties/issuer/oneOf/1/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err34];}else {vErrors.push(err34);}errors++;}var _valid2 = _errs55 === errors;if(_valid2 && valid11){valid11 = false;passing2 = [passing2, 1];}else {if(_valid2){valid11 = true;passing2 = 1;}}if(!valid11){const err35 = {instancePath:instancePath+"/issuer",schemaPath:"#/properties/issuer/oneOf",keyword:"oneOf",params:{passingSchemas: passing2},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err35];}else {vErrors.push(err35);}errors++;}else {errors = _errs46;if(vErrors !== null){if(_errs46){vErrors.length = _errs46;}else {vErrors = null;}}}}if(data.openAttestationMetadata !== undefined){let data20 = data.openAttestationMetadata;if(data20 && typeof data20 == "object" && !Array.isArray(data20)){if(data20.proof === undefined){const err36 = {instancePath:instancePath+"/openAttestationMetadata",schemaPath:"#/properties/openAttestationMetadata/required",keyword:"required",params:{missingProperty: "proof"},message:"must have required property '"+"proof"+"'"};if(vErrors === null){vErrors = [err36];}else {vErrors.push(err36);}errors++;}if(data20.identityProof === undefined){const err37 = {instancePath:instancePath+"/openAttestationMetadata",schemaPath:"#/properties/openAttestationMetadata/required",keyword:"required",params:{missingProperty: "identityProof"},message:"must have required property '"+"identityProof"+"'"};if(vErrors === null){vErrors = [err37];}else {vErrors.push(err37);}errors++;}if(data20.template !== undefined){let data21 = data20.template;if(data21 && typeof data21 == "object" && !Array.isArray(data21)){if(data21.name === undefined){const err38 = {instancePath:instancePath+"/openAttestationMetadata/template",schemaPath:"#/properties/openAttestationMetadata/properties/template/required",keyword:"required",params:{missingProperty: "name"},message:"must have required property '"+"name"+"'"};if(vErrors === null){vErrors = [err38];}else {vErrors.push(err38);}errors++;}if(data21.type === undefined){const err39 = {instancePath:instancePath+"/openAttestationMetadata/template",schemaPath:"#/properties/openAttestationMetadata/properties/template/required",keyword:"required",params:{missingProperty: "type"},message:"must have required property '"+"type"+"'"};if(vErrors === null){vErrors = [err39];}else {vErrors.push(err39);}errors++;}if(data21.url === undefined){const err40 = {instancePath:instancePath+"/openAttestationMetadata/template",schemaPath:"#/properties/openAttestationMetadata/properties/template/required",keyword:"required",params:{missingProperty: "url"},message:"must have required property '"+"url"+"'"};if(vErrors === null){vErrors = [err40];}else {vErrors.push(err40);}errors++;}for(const key0 in data21){if(!(((key0 === "name") || (key0 === "type")) || (key0 === "url"))){const err41 = {instancePath:instancePath+"/openAttestationMetadata/template",schemaPath:"#/properties/openAttestationMetadata/properties/template/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err41];}else {vErrors.push(err41);}errors++;}}if(data21.name !== undefined){if(typeof data21.name !== "string"){const err42 = {instancePath:instancePath+"/openAttestationMetadata/template/name",schemaPath:"#/properties/openAttestationMetadata/properties/template/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err42];}else {vErrors.push(err42);}errors++;}}if(data21.type !== undefined){if(typeof data21.type !== "string"){const err43 = {instancePath:instancePath+"/openAttestationMetadata/template/type",schemaPath:"#/properties/openAttestationMetadata/properties/template/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err43];}else {vErrors.push(err43);}errors++;}}if(data21.url !== undefined){if(typeof data21.url !== "string"){const err44 = {instancePath:instancePath+"/openAttestationMetadata/template/url",schemaPath:"#/properties/openAttestationMetadata/properties/template/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err44];}else {vErrors.push(err44);}errors++;}}}else {const err45 = {instancePath:instancePath+"/openAttestationMetadata/template",schemaPath:"#/properties/openAttestationMetadata/properties/template/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err45];}else {vErrors.push(err45);}errors++;}}if(data20.proof !== undefined){let data25 = data20.proof;if(data25 && typeof data25 == "object" && !Array.isArray(data25)){if(data25.type === undefined){const err46 = {instancePath:instancePath+"/openAttestationMetadata/proof",schemaPath:"#/properties/openAttestationMetadata/properties/proof/required",keyword:"required",params:{missingProperty: "type"},message:"must have required property '"+"type"+"'"};if(vErrors === null){vErrors = [err46];}else {vErrors.push(err46);}errors++;}if(data25.method === undefined){const err47 = {instancePath:instancePath+"/openAttestationMetadata/proof",schemaPath:"#/properties/openAttestationMetadata/properties/proof/required",keyword:"required",params:{missingProperty: "method"},message:"must have required property '"+"method"+"'"};if(vErrors === null){vErrors = [err47];}else {vErrors.push(err47);}errors++;}if(data25.value === undefined){const err48 = {instancePath:instancePath+"/openAttestationMetadata/proof",schemaPath:"#/properties/openAttestationMetadata/properties/proof/required",keyword:"required",params:{missingProperty: "value"},message:"must have required property '"+"value"+"'"};if(vErrors === null){vErrors = [err48];}else {vErrors.push(err48);}errors++;}if(data25.type !== undefined){if(typeof data25.type !== "string"){const err49 = {instancePath:instancePath+"/openAttestationMetadata/proof/type",schemaPath:"#/properties/openAttestationMetadata/properties/proof/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err49];}else {vErrors.push(err49);}errors++;}}if(data25.method !== undefined){if(typeof data25.method !== "string"){const err50 = {instancePath:instancePath+"/openAttestationMetadata/proof/method",schemaPath:"#/properties/openAttestationMetadata/properties/proof/properties/method/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err50];}else {vErrors.push(err50);}errors++;}}if(data25.value !== undefined){if(typeof data25.value !== "string"){const err51 = {instancePath:instancePath+"/openAttestationMetadata/proof/value",schemaPath:"#/properties/openAttestationMetadata/properties/proof/properties/value/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err51];}else {vErrors.push(err51);}errors++;}}if(data25.revocation !== undefined){let data29 = data25.revocation;if(data29 && typeof data29 == "object" && !Array.isArray(data29)){if(data29.type === undefined){const err52 = {instancePath:instancePath+"/openAttestationMetadata/proof/revocation",schemaPath:"#/properties/openAttestationMetadata/properties/proof/properties/revocation/required",keyword:"required",params:{missingProperty: "type"},message:"must have required property '"+"type"+"'"};if(vErrors === null){vErrors = [err52];}else {vErrors.push(err52);}errors++;}if(data29.type !== undefined){if(typeof data29.type !== "string"){const err53 = {instancePath:instancePath+"/openAttestationMetadata/proof/revocation/type",schemaPath:"#/properties/openAttestationMetadata/properties/proof/properties/revocation/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err53];}else {vErrors.push(err53);}errors++;}}if(data29.location !== undefined){if(typeof data29.location !== "string"){const err54 = {instancePath:instancePath+"/openAttestationMetadata/proof/revocation/location",schemaPath:"#/properties/openAttestationMetadata/properties/proof/properties/revocation/properties/location/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err54];}else {vErrors.push(err54);}errors++;}}}else {const err55 = {instancePath:instancePath+"/openAttestationMetadata/proof/revocation",schemaPath:"#/properties/openAttestationMetadata/properties/proof/properties/revocation/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err55];}else {vErrors.push(err55);}errors++;}}}else {const err56 = {instancePath:instancePath+"/openAttestationMetadata/proof",schemaPath:"#/properties/openAttestationMetadata/properties/proof/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err56];}else {vErrors.push(err56);}errors++;}}if(data20.identityProof !== undefined){let data32 = data20.identityProof;if(data32 && typeof data32 == "object" && !Array.isArray(data32)){if(data32.type === undefined){const err57 = {instancePath:instancePath+"/openAttestationMetadata/identityProof",schemaPath:"#/properties/openAttestationMetadata/properties/identityProof/required",keyword:"required",params:{missingProperty: "type"},message:"must have required property '"+"type"+"'"};if(vErrors === null){vErrors = [err57];}else {vErrors.push(err57);}errors++;}if(data32.identifier === undefined){const err58 = {instancePath:instancePath+"/openAttestationMetadata/identityProof",schemaPath:"#/properties/openAttestationMetadata/properties/identityProof/required",keyword:"required",params:{missingProperty: "identifier"},message:"must have required property '"+"identifier"+"'"};if(vErrors === null){vErrors = [err58];}else {vErrors.push(err58);}errors++;}for(const key1 in data32){if(!((key1 === "type") || (key1 === "identifier"))){const err59 = {instancePath:instancePath+"/openAttestationMetadata/identityProof",schemaPath:"#/properties/openAttestationMetadata/properties/identityProof/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err59];}else {vErrors.push(err59);}errors++;}}if(data32.type !== undefined){if(typeof data32.type !== "string"){const err60 = {instancePath:instancePath+"/openAttestationMetadata/identityProof/type",schemaPath:"#/properties/openAttestationMetadata/properties/identityProof/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err60];}else {vErrors.push(err60);}errors++;}}if(data32.identifier !== undefined){if(typeof data32.identifier !== "string"){const err61 = {instancePath:instancePath+"/openAttestationMetadata/identityProof/identifier",schemaPath:"#/properties/openAttestationMetadata/properties/identityProof/properties/identifier/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err61];}else {vErrors.push(err61);}errors++;}}}else {const err62 = {instancePath:instancePath+"/openAttestationMetadata/identityProof",schemaPath:"#/properties/openAttestationMetadata/properties/identityProof/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err62];}else {vErrors.push(err62);}errors++;}}}else {const err63 = {instancePath:instancePath+"/openAttestationMetadata",schemaPath:"#/properties/openAttestationMetadata/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err63];}else {vErrors.push(err63);}errors++;}}if(data.attachments !== undefined){let data35 = data.attachments;if(Array.isArray(data35)){const len3 = data35.length;for(let i3=0; i3<len3; i3++){let data36 = data35[i3];if(data36 && typeof data36 == "object" && !Array.isArray(data36)){if(data36.fileName === undefined){const err64 = {instancePath:instancePath+"/attachments/" + i3,schemaPath:"#/properties/attachments/items/required",keyword:"required",params:{missingProperty: "fileName"},message:"must have required property '"+"fileName"+"'"};if(vErrors === null){vErrors = [err64];}else {vErrors.push(err64);}errors++;}if(data36.mimeType === undefined){const err65 = {instancePath:instancePath+"/attachments/" + i3,schemaPath:"#/properties/attachments/items/required",keyword:"required",params:{missingProperty: "mimeType"},message:"must have required property '"+"mimeType"+"'"};if(vErrors === null){vErrors = [err65];}else {vErrors.push(err65);}errors++;}if(data36.data === undefined){const err66 = {instancePath:instancePath+"/attachments/" + i3,schemaPath:"#/properties/attachments/items/required",keyword:"required",params:{missingProperty: "data"},message:"must have required property '"+"data"+"'"};if(vErrors === null){vErrors = [err66];}else {vErrors.push(err66);}errors++;}for(const key2 in data36){if(!(((key2 === "fileName") || (key2 === "mimeType")) || (key2 === "data"))){const err67 = {instancePath:instancePath+"/attachments/" + i3,schemaPath:"#/properties/attachments/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err67];}else {vErrors.push(err67);}errors++;}}if(data36.fileName !== undefined){if(typeof data36.fileName !== "string"){const err68 = {instancePath:instancePath+"/attachments/" + i3+"/fileName",schemaPath:"#/properties/attachments/items/properties/fileName/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err68];}else {vErrors.push(err68);}errors++;}}if(data36.mimeType !== undefined){if(typeof data36.mimeType !== "string"){const err69 = {instancePath:instancePath+"/attachments/" + i3+"/mimeType",schemaPath:"#/properties/attachments/items/properties/mimeType/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err69];}else {vErrors.push(err69);}errors++;}}if(data36.data !== undefined){if(typeof data36.data !== "string"){const err70 = {instancePath:instancePath+"/attachments/" + i3+"/data",schemaPath:"#/properties/attachments/items/properties/data/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err70];}else {vErrors.push(err70);}errors++;}}}else {const err71 = {instancePath:instancePath+"/attachments/" + i3,schemaPath:"#/properties/attachments/items/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err71];}else {vErrors.push(err71);}errors++;}}}else {const err72 = {instancePath:instancePath+"/attachments",schemaPath:"#/properties/attachments/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err72];}else {vErrors.push(err72);}errors++;}}if(data.network !== undefined){let data40 = data.network;if(data40 && typeof data40 == "object" && !Array.isArray(data40)){if(data40.chain === undefined){const err73 = {instancePath:instancePath+"/network",schemaPath:"#/properties/network/required",keyword:"required",params:{missingProperty: "chain"},message:"must have required property '"+"chain"+"'"};if(vErrors === null){vErrors = [err73];}else {vErrors.push(err73);}errors++;}if(data40.chain !== undefined){if(typeof data40.chain !== "string"){const err74 = {instancePath:instancePath+"/network/chain",schemaPath:"#/properties/network/properties/chain/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err74];}else {vErrors.push(err74);}errors++;}}if(data40.chainId !== undefined){if(typeof data40.chainId !== "string"){const err75 = {instancePath:instancePath+"/network/chainId",schemaPath:"#/properties/network/properties/chainId/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err75];}else {vErrors.push(err75);}errors++;}}}else {const err76 = {instancePath:instancePath+"/network",schemaPath:"#/properties/network/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err76];}else {vErrors.push(err76);}errors++;}}}else {const err77 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err77];}else {vErrors.push(err77);}errors++;}validate21.errors = vErrors;return errors === 0;}